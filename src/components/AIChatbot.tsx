
import { useState } from 'react';
import { Send, MessageCircle, Globe, Zap } from 'lucide-react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';

export const AIChatbot = () => {
  const [messages, setMessages] = useState([
    {
      type: 'bot',
      content: 'Hello! I\'m your AI spending assistant. Ask me about your expenses, receipts, or savings opportunities in any language!',
      timestamp: new Date()
    }
  ]);
  const [inputValue, setInputValue] = useState('');
  const [selectedLanguage, setSelectedLanguage] = useState('en');
  const [isLoading, setIsLoading] = useState(false);

  const languages = [
    { code: 'en', name: 'English', flag: 'üá∫üá∏' },
    { code: 'hi', name: '‡§π‡§ø‡§Ç‡§¶‡•Ä', flag: 'üáÆüá≥' },
    { code: 'te', name: '‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å', flag: 'üáÆüá≥' },
    { code: 'ta', name: '‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç', flag: 'üáÆüá≥' },
    { code: 'bn', name: '‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ', flag: 'üáßüá©' },
    { code: 'mr', name: '‡§Æ‡§∞‡§æ‡§†‡•Ä', flag: 'üáÆüá≥' },
    { code: 'gu', name: '‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä', flag: 'üáÆüá≥' },
    { code: 'kn', name: '‡≤ï‡≤®‡≥ç‡≤®‡≤°', flag: 'üáÆüá≥' },
    { code: 'ml', name: '‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç', flag: 'üáÆüá≥' },
    { code: 'pa', name: '‡®™‡©∞‡®ú‡®æ‡®¨‡©Ä', flag: 'üáÆüá≥' },
    { code: 'ur', name: 'ÿßÿ±ÿØŸà', flag: 'üáµüá∞' },
    { code: 'es', name: 'Espa√±ol', flag: 'üá™üá∏' },
    { code: 'fr', name: 'Fran√ßais', flag: 'üá´üá∑' },
    { code: 'de', name: 'Deutsch', flag: 'üá©üá™' },
    { code: 'ar', name: 'ÿßŸÑÿπÿ±ÿ®Ÿäÿ©', flag: 'üá∏üá¶' },
    { code: 'zh', name: '‰∏≠Êñá', flag: 'üá®üá≥' },
  ];

  const getQuickQuestionsByLanguage = (langCode: string) => {
    const questions = {
      en: [
        "How much did I spend on groceries this month?",
        "What can I cook with my recent purchases?",
        "How can I save money on coffee?",
        "Show me my transportation costs",
        "What are my biggest spending categories?"
      ],
      hi: [
        "‡§á‡§∏ ‡§Æ‡§π‡•Ä‡§®‡•á ‡§Æ‡•à‡§Ç‡§®‡•á ‡§ï‡§ø‡§∞‡§æ‡§®‡•á ‡§ï‡§æ ‡§∏‡§æ‡§Æ‡§æ‡§® ‡§™‡§∞ ‡§ï‡§ø‡§§‡§®‡§æ ‡§ñ‡§∞‡•ç‡§ö ‡§ï‡§ø‡§Ø‡§æ?",
        "‡§Æ‡•à‡§Ç ‡§Ö‡§™‡§®‡•Ä ‡§π‡§æ‡§≤ ‡§ï‡•Ä ‡§ñ‡§∞‡•Ä‡§¶‡§æ‡§∞‡•Ä ‡§ï‡•á ‡§∏‡§æ‡§• ‡§ï‡•ç‡§Ø‡§æ ‡§¨‡§®‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç?",
        "‡§Æ‡•à‡§Ç ‡§ï‡•â‡§´‡•Ä ‡§™‡§∞ ‡§™‡•à‡§∏‡•á ‡§ï‡•à‡§∏‡•á ‡§¨‡§ö‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç?",
        "‡§Æ‡•Å‡§ù‡•á ‡§Ö‡§™‡§®‡•Ä ‡§™‡§∞‡§ø‡§µ‡§π‡§® ‡§≤‡§æ‡§ó‡§§ ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Ç",
        "‡§Æ‡•á‡§∞‡•Ä ‡§∏‡§¨‡§∏‡•á ‡§¨‡§°‡§º‡•Ä ‡§ñ‡§∞‡•ç‡§ö ‡§∂‡•ç‡§∞‡•á‡§£‡§ø‡§Ø‡§æ‡§Ç ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à‡§Ç?"
      ],
      te: [
        "‡∞à ‡∞®‡±Ü‡∞≤‡∞≤‡±ã ‡∞®‡±á‡∞®‡±Å ‡∞ï‡∞ø‡∞∞‡∞æ‡∞£‡∞æ ‡∞∏‡∞æ‡∞Æ‡∞æ‡∞®‡±Å ‡∞Æ‡±Ä‡∞¶ ‡∞é‡∞Ç‡∞§ ‡∞ñ‡∞∞‡±ç‡∞ö‡±Å ‡∞ö‡±á‡∞∂‡∞æ‡∞®‡±Å?",
        "‡∞®‡∞æ ‡∞á‡∞ü‡±Ä‡∞µ‡∞≤‡∞ø ‡∞ï‡±ä‡∞®‡±Å‡∞ó‡±ã‡∞≥‡±ç‡∞≤‡∞§‡±ã ‡∞®‡±á‡∞®‡±Å ‡∞è‡∞Æ‡∞ø ‡∞µ‡∞Ç‡∞°‡∞ó‡∞≤‡∞®‡±Å?",
        "‡∞ï‡∞æ‡∞´‡±Ä ‡∞Æ‡±Ä‡∞¶ ‡∞®‡±á‡∞®‡±Å ‡∞é‡∞≤‡∞æ ‡∞°‡∞¨‡±ç‡∞¨‡±Å ‡∞Ü‡∞¶‡∞æ ‡∞ö‡±á‡∞Ø‡∞ó‡∞≤‡∞®‡±Å?",
        "‡∞®‡∞æ ‡∞∞‡∞µ‡∞æ‡∞£‡∞æ ‡∞ñ‡∞∞‡±ç‡∞ö‡±Å‡∞≤‡∞®‡±Å ‡∞ö‡±Ç‡∞™‡∞ø‡∞Ç‡∞ö‡±Å",
        "‡∞®‡∞æ ‡∞Ö‡∞§‡∞ø‡∞™‡±Ü‡∞¶‡±ç‡∞¶‡∞µ‡∞æ‡∞∞‡±ç‡∞ö‡∞® ‡∞∂‡±ç‡∞∞‡±á‡∞£‡±Å‡∞≤‡±Å ‡∞è‡∞Æ‡∞ø‡∞ü‡∞ø?"
      ],
      ta: [
        "‡Æá‡Æ®‡Øç‡Æ§ ‡ÆÆ‡Ææ‡Æ§‡ÆÆ‡Øç ‡Æ®‡Ææ‡Æ©‡Øç ‡ÆÆ‡Æ≥‡Æø‡Æï‡Øà‡Æ™‡Øç ‡Æ™‡Øä‡Æ∞‡ØÅ‡Æü‡Øç‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡Æé‡Æµ‡Øç‡Æµ‡Æ≥‡Æµ‡ØÅ ‡Æö‡ØÜ‡Æ≤‡Æµ‡ØÅ ‡Æö‡ØÜ‡ÆØ‡Øç‡Æ§‡Øá‡Æ©‡Øç?",
        "‡Æé‡Æ©‡Øç ‡Æö‡ÆÆ‡ØÄ‡Æ™‡Æ§‡Øç‡Æ§‡Æø‡ÆØ ‡Æµ‡Ææ‡Æô‡Øç‡Æï‡Æ≤‡Øç‡Æï‡Æ≥‡ØÅ‡Æü‡Æ©‡Øç ‡Æ®‡Ææ‡Æ©‡Øç ‡Æé‡Æ©‡Øç‡Æ© ‡Æö‡ÆÆ‡Øà‡Æï‡Øç‡Æï ‡ÆÆ‡ØÅ‡Æü‡Æø‡ÆØ‡ØÅ‡ÆÆ‡Øç?",
        "‡Æï‡Ææ‡Æ™‡Æø‡ÆØ‡Æø‡Æ≤‡Øç ‡Æ®‡Ææ‡Æ©‡Øç ‡Æé‡Æ™‡Øç‡Æ™‡Æü‡Æø ‡Æ™‡Æ£‡ÆÆ‡Øç ‡Æö‡Øá‡ÆÆ‡Æø‡Æï‡Øç‡Æï ‡ÆÆ‡ØÅ‡Æü‡Æø‡ÆØ‡ØÅ‡ÆÆ‡Øç?",
        "‡Æé‡Æ©‡Øç ‡Æ™‡Øã‡Æï‡Øç‡Æï‡ØÅ‡Æµ‡Æ∞‡Æ§‡Øç‡Æ§‡ØÅ ‡Æö‡ØÜ‡Æ≤‡Æµ‡ØÅ‡Æï‡Æ≥‡Øà‡Æï‡Øç ‡Æï‡Ææ‡Æü‡Øç‡Æü‡ØÅ",
        "‡Æé‡Æ©‡Øç ‡ÆÆ‡Æø‡Æï‡Æ™‡Øç‡Æ™‡ØÜ‡Æ∞‡Æø‡ÆØ ‡Æö‡ØÜ‡Æ≤‡Æµ‡ØÅ ‡Æµ‡Æï‡Øà‡Æï‡Æ≥‡Øç ‡Æé‡Æ©‡Øç‡Æ©?"
      ],
      bn: [
        "‡¶è‡¶á ‡¶Æ‡¶æ‡¶∏‡ßá ‡¶Ü‡¶Æ‡¶ø ‡¶Æ‡ßÅ‡¶¶‡¶ø‡¶ñ‡¶æ‡¶®‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ï‡¶§ ‡¶ñ‡¶∞‡¶ö ‡¶ï‡¶∞‡ßá‡¶õ‡¶ø?",
        "‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶Æ‡ßç‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ï ‡¶ï‡ßá‡¶®‡¶æ‡¶ï‡¶æ‡¶ü‡¶æ ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ü‡¶Æ‡¶ø ‡¶ï‡ßÄ ‡¶∞‡¶æ‡¶®‡ßç‡¶®‡¶æ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø?",
        "‡¶ï‡¶´‡¶ø‡¶§‡ßá ‡¶Ü‡¶Æ‡¶ø ‡¶ï‡ßÄ‡¶≠‡¶æ‡¶¨‡ßá ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶¨‡¶æ‡¶Å‡¶ö‡¶æ‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø?",
        "‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶™‡¶∞‡¶ø‡¶¨‡¶π‡¶® ‡¶ñ‡¶∞‡¶ö ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®",
        "‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶∏‡¶¨‡¶ö‡ßá‡¶Ø‡¶º‡ßá ‡¶¨‡¶°‡¶º ‡¶ñ‡¶∞‡¶ö‡ßá‡¶∞ ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó‡¶ó‡ßÅ‡¶≤‡¶ø ‡¶ï‡ßÄ?"
      ],
      mr: [
        "‡§Ø‡§æ ‡§Æ‡§π‡§ø‡§®‡•ç‡§Ø‡§æ‡§§ ‡§Æ‡•Ä ‡§ï‡§ø‡§∞‡§æ‡§£‡§æ ‡§Æ‡§æ‡§≤‡§æ‡§µ‡§∞ ‡§ï‡§ø‡§§‡•Ä ‡§ñ‡§∞‡•ç‡§ö ‡§ï‡•á‡§≤‡§æ?",
        "‡§Æ‡§æ‡§ù‡•ç‡§Ø‡§æ ‡§Ö‡§≤‡•Ä‡§ï‡§°‡§ö‡•ç‡§Ø‡§æ ‡§ñ‡§∞‡•á‡§¶‡•Ä‡§∏‡§π ‡§Æ‡•Ä ‡§ï‡§æ‡§Ø ‡§∂‡§ø‡§ú‡§µ‡•Ç ‡§∂‡§ï‡§§‡•ã?",
        "‡§ï‡•â‡§´‡•Ä‡§µ‡§∞ ‡§Æ‡•Ä ‡§™‡•à‡§∏‡•á ‡§ï‡§∏‡•á ‡§µ‡§æ‡§ö‡§µ‡•Ç ‡§∂‡§ï‡§§‡•ã?",
        "‡§Æ‡§æ‡§ù‡•á ‡§µ‡§æ‡§π‡§§‡•Ç‡§ï ‡§ñ‡§∞‡•ç‡§ö ‡§¶‡§æ‡§ñ‡§µ‡§æ",
        "‡§Æ‡§æ‡§ù‡•á ‡§∏‡§∞‡•ç‡§µ‡§æ‡§§ ‡§Æ‡•ã‡§†‡•á ‡§ñ‡§∞‡•ç‡§ö‡§æ‡§ö‡•á ‡§µ‡§∞‡•ç‡§ó ‡§ï‡•ã‡§£‡§§‡•á ‡§Ü‡§π‡•á‡§§?"
      ],
      gu: [
        "‡™Ü ‡™Æ‡™π‡™ø‡™®‡´á ‡™Æ‡´á‡™Ç ‡™ï‡™ø‡™∞‡™æ‡™£‡™æ‡™®‡™æ ‡™∏‡™æ‡™Æ‡™æ‡™® ‡™™‡™∞ ‡™ï‡´á‡™ü‡™≤‡´ã ‡™ñ‡™∞‡´ç‡™ö ‡™ï‡™∞‡´ç‡™Ø‡´ã?",
        "‡™Æ‡™æ‡™∞‡´Ä ‡™§‡™æ‡™ú‡´á‡™§‡™∞‡™®‡´Ä ‡™ñ‡™∞‡´Ä‡™¶‡´Ä‡™ì ‡™∏‡™æ‡™•‡´á ‡™π‡´Å‡™Ç ‡™∂‡´Å‡™Ç ‡™∞‡™æ‡™Ç‡™ß‡´Ä ‡™∂‡™ï‡´Å‡™Ç?",
        "‡™ï‡´ã‡™´‡´Ä ‡™™‡™∞ ‡™π‡´Å‡™Ç ‡™ï‡´á‡™µ‡´Ä ‡™∞‡´Ä‡™§‡´á ‡™™‡´à‡™∏‡™æ ‡™¨‡™ö‡™æ‡™µ‡´Ä ‡™∂‡™ï‡´Å‡™Ç?",
        "‡™Æ‡™æ‡™∞‡™æ ‡™™‡™∞‡™ø‡™µ‡™π‡™® ‡™ñ‡™∞‡´ç‡™ö ‡™¨‡™§‡™æ‡™µ‡´ã",
        "‡™Æ‡™æ‡™∞‡´Ä ‡™∏‡´å‡™•‡´Ä ‡™Æ‡´ã‡™ü‡´Ä ‡™ñ‡™∞‡´ç‡™ö ‡™ï‡´á‡™ü‡´á‡™ó‡™∞‡´Ä‡™ì ‡™ï‡™à ‡™õ‡´á?"
      ],
      kn: [
        "‡≤à ‡≤§‡≤ø‡≤Ç‡≤ó‡≤≥‡≥Å ‡≤®‡≤æ‡≤®‡≥Å ‡≤¶‡≤ø‡≤®‡≤∏‡≤ø ‡≤∏‡≤æ‡≤Æ‡≤æ‡≤®‡≥Å‡≤ó‡≤≥‡≤ø‡≤ó‡≥Ü ‡≤é‡≤∑‡≥ç‡≤ü‡≥Å ‡≤ñ‡≤∞‡≥ç‡≤ö‡≥Å ‡≤Æ‡≤æ‡≤°‡≤ø‡≤¶‡≥Ü?",
        "‡≤®‡≤®‡≥ç‡≤® ‡≤á‡≤§‡≥ç‡≤§‡≥Ä‡≤ö‡≤ø‡≤® ‡≤ñ‡≤∞‡≥Ä‡≤¶‡≤ø‡≤ó‡≤≥‡≥ä‡≤Ç‡≤¶‡≤ø‡≤ó‡≥Ü ‡≤®‡≤æ‡≤®‡≥Å ‡≤è‡≤®‡≥Å ‡≤¨‡≥á‡≤Ø‡≤ø‡≤∏‡≤¨‡≤π‡≥Å‡≤¶‡≥Å?",
        "‡≤ï‡≤æ‡≤´‡≤ø‡≤Ø‡≤≤‡≥ç‡≤≤‡≤ø ‡≤®‡≤æ‡≤®‡≥Å ‡≤π‡≥á‡≤ó‡≥Ü ‡≤π‡≤£ ‡≤â‡≤≥‡≤ø‡≤∏‡≤¨‡≤π‡≥Å‡≤¶‡≥Å?",
        "‡≤®‡≤®‡≥ç‡≤® ‡≤∏‡≤æ‡≤∞‡≤ø‡≤ó‡≥Ü ‡≤µ‡≥Ü‡≤ö‡≥ç‡≤ö‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤§‡≥ã‡≤∞‡≤ø‡≤∏‡≤ø",
        "‡≤®‡≤®‡≥ç‡≤® ‡≤¶‡≥ä‡≤°‡≥ç‡≤° ‡≤µ‡≥Ü‡≤ö‡≥ç‡≤ö‡≤¶ ‡≤µ‡≤∞‡≥ç‡≤ó‡≤ó‡≤≥‡≥Å ‡≤Ø‡≤æ‡≤µ‡≥Å‡≤µ‡≥Å?"
      ],
      ml: [
        "‡¥à ‡¥Æ‡¥æ‡¥∏‡¥Ç ‡¥û‡¥æ‡µª ‡¥™‡¥≤‡¥µ‡µç‡¥Ø‡¥û‡µç‡¥ú‡¥®‡¥ô‡µç‡¥ô‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥é‡¥§‡µç‡¥∞ ‡¥ö‡¥ø‡¥≤‡¥µ‡¥æ‡¥ï‡µç‡¥ï‡¥ø?",
        "‡¥é‡¥®‡µç‡¥±‡µÜ ‡¥∏‡¥Æ‡µÄ‡¥™‡¥ï‡¥æ‡¥≤ ‡¥µ‡¥æ‡¥ô‡µç‡¥ô‡¥≤‡µÅ‡¥ï‡µæ ‡¥ï‡µä‡¥£‡µç‡¥ü‡µç ‡¥é‡¥®‡¥ø‡¥ï‡µç‡¥ï‡µç ‡¥é‡¥®‡µç‡¥§‡µç ‡¥™‡¥æ‡¥ö‡¥ï‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡¥æ‡¥Ç?",
        "‡¥ï‡µã‡¥´‡¥ø‡¥Ø‡¥ø‡µΩ ‡¥é‡¥®‡¥ø‡¥ï‡µç‡¥ï‡µç ‡¥é‡¥ô‡µç‡¥ô‡¥®‡µÜ ‡¥™‡¥£‡¥Ç ‡¥≤‡¥æ‡¥≠‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡¥Ç?",
        "‡¥é‡¥®‡µç‡¥±‡µÜ ‡¥ó‡¥§‡¥æ‡¥ó‡¥§ ‡¥ö‡¥ø‡¥≤‡¥µ‡µÅ‡¥ï‡µæ ‡¥ï‡¥æ‡¥£‡¥ø‡¥ï‡µç‡¥ï‡µÇ",
        "‡¥é‡¥®‡µç‡¥±‡µÜ ‡¥è‡¥±‡µç‡¥±‡¥µ‡µÅ‡¥Ç ‡¥µ‡¥≤‡¥ø‡¥Ø ‡¥ö‡¥ø‡¥≤‡¥µ‡µç ‡¥µ‡¥ø‡¥≠‡¥æ‡¥ó‡¥ô‡µç‡¥ô‡µæ ‡¥é‡¥®‡µç‡¥§‡µä‡¥ï‡µç‡¥ï‡µÜ‡¥Ø‡¥æ‡¥£‡µç?"
      ],
      pa: [
        "‡®á‡®∏ ‡®Æ‡®π‡©Ä‡®®‡©á ‡®Æ‡©à‡®Ç ‡®ï‡®ø‡®∞‡®ø‡®Ü‡®®‡©á ‡®¶‡©á ‡®∏‡®æ‡®Æ‡®æ‡®® '‡®§‡©á ‡®ï‡®ø‡©∞‡®®‡®æ ‡®ñ‡®∞‡®ö ‡®ï‡©Ä‡®§‡®æ?",
        "‡®Æ‡©à‡®Ç ‡®Ü‡®™‡®£‡©Ä‡®Ü‡®Ç ‡®π‡®æ‡®≤‡©Ä‡®Ü ‡®ñ‡®∞‡©Ä‡®¶‡®¶‡®æ‡®∞‡©Ä‡®Ü‡®Ç ‡®®‡®æ‡®≤ ‡®ï‡©Ä ‡®™‡®ï‡®æ ‡®∏‡®ï‡®¶‡®æ ‡®π‡®æ‡®Ç?",
        "‡®Æ‡©à‡®Ç ‡®ï‡®æ‡®´‡©Ä '‡®§‡©á ‡®™‡©à‡®∏‡©á ‡®ï‡®ø‡®µ‡©á‡®Ç ‡®¨‡®ö‡®æ ‡®∏‡®ï‡®¶‡®æ ‡®π‡®æ‡®Ç?",
        "‡®Æ‡©à‡®®‡©Ç‡©∞ ‡®Ü‡®™‡®£‡©á ‡®Ü‡®µ‡®æ‡®ú‡®æ‡®à ‡®¶‡©á ‡®ñ‡®∞‡®ö‡©á ‡®¶‡®ø‡®ñ‡®æ‡®ì",
        "‡®Æ‡©á‡®∞‡©Ä‡®Ü‡®Ç ‡®∏‡®≠ ‡®§‡©ã‡®Ç ‡®µ‡©±‡®°‡©Ä‡®Ü‡®Ç ‡®ñ‡®∞‡®ö‡®æ ‡®∏‡®º‡©ç‡®∞‡©á‡®£‡©Ä‡®Ü‡®Ç ‡®ï‡©Ä ‡®π‡®®?"
      ],
      ur: [
        "ÿßÿ≥ ŸÖ€Å€åŸÜ€í ŸÖ€å⁄∫ ŸÜ€í ⁄©ÿ±€åÿßŸÜ€í ⁄©€í ÿ≥ÿßŸÖÿßŸÜ Ÿæÿ± ⁄©ÿ™ŸÜÿß ÿÆÿ±⁄Ü ⁄©€åÿßÿü",
        "ÿßŸæŸÜ€å ÿ≠ÿßŸÑ€å€Å ÿÆÿ±€åÿØÿßÿ±€åŸà⁄∫ ÿ≥€í ŸÖ€å⁄∫ ⁄©€åÿß Ÿæ⁄©ÿß ÿ≥⁄©ÿ™ÿß €ÅŸà⁄∫ÿü",
        "⁄©ÿßŸÅ€å Ÿæÿ± ŸÖ€å⁄∫ ⁄©€åÿ≥€í Ÿæ€åÿ≥€í ÿ®⁄Üÿß ÿ≥⁄©ÿ™ÿß €ÅŸà⁄∫ÿü",
        "ŸÖÿ¨⁄æ€í ÿßŸæŸÜ€í ŸÜŸÇŸÑ Ÿà ÿ≠ŸÖŸÑ ⁄©€í ÿßÿÆÿ±ÿßÿ¨ÿßÿ™ ÿØ⁄©⁄æÿßÿ¶€å⁄∫",
        "ŸÖ€åÿ±€å ÿ≥ÿ® ÿ≥€í ÿ®⁄ë€å ÿÆÿ±⁄Ü ⁄©€å ÿßŸÇÿ≥ÿßŸÖ ⁄©€åÿß €Å€å⁄∫ÿü"
      ],
      es: [
        "¬øCu√°nto gast√© en comestibles este mes?",
        "¬øQu√© puedo cocinar con mis compras recientes?",
        "¬øC√≥mo puedo ahorrar dinero en caf√©?",
        "Mu√©strame mis gastos de transporte",
        "¬øCu√°les son mis categor√≠as de gasto m√°s grandes?"
      ],
      fr: [
        "Combien ai-je d√©pens√© en √©picerie ce mois-ci?",
        "Que puis-je cuisiner avec mes achats r√©cents?",
        "Comment puis-je √©conomiser de l'argent sur le caf√©?",
        "Montrez-moi mes co√ªts de transport",
        "Quelles sont mes plus grandes cat√©gories de d√©penses?"
      ],
      de: [
        "Wie viel habe ich diesen Monat f√ºr Lebensmittel ausgegeben?",
        "Was kann ich mit meinen letzten Eink√§ufen kochen?",
        "Wie kann ich beim Kaffee sparen?",
        "Zeigen Sie mir meine Transportkosten",
        "Was sind meine gr√∂√üten Ausgabenkategorien?"
      ],
      zh: [
        "Ëøô‰∏™ÊúàÊàëÂú®ÊùÇË¥ß‰∏äËä±‰∫ÜÂ§öÂ∞ëÈí±Ôºü",
        "ÊàëÂèØ‰ª•Áî®ÊúÄËøëÁöÑË¥≠‰π∞ÂÅö‰ªÄ‰πàËèúÔºü",
        "ÊàëÊÄéÊ†∑Âú®ÂíñÂï°‰∏äÁúÅÈí±Ôºü",
        "ÊòæÁ§∫ÊàëÁöÑ‰∫§ÈÄöË¥πÁî®",
        "ÊàëÊúÄÂ§ßÁöÑÊîØÂá∫Á±ªÂà´ÊòØ‰ªÄ‰πàÔºü"
      ],
      ar: [
        "ŸÉŸÖ ÿ£ŸÜŸÅŸÇÿ™ ÿπŸÑŸâ ÿßŸÑÿ®ŸÇÿßŸÑÿ© Ÿáÿ∞ÿß ÿßŸÑÿ¥Ÿáÿ±ÿü",
        "ŸÖÿßÿ∞ÿß ŸäŸÖŸÉŸÜŸÜŸä ÿ£ŸÜ ÿ£ÿ∑ÿ®ÿÆ ÿ®ŸÖÿ¥ÿ™ÿ±Ÿäÿßÿ™Ÿä ÿßŸÑÿ£ÿÆŸäÿ±ÿ©ÿü",
        "ŸÉŸäŸÅ ŸäŸÖŸÉŸÜŸÜŸä ÿ™ŸàŸÅŸäÿ± ÿßŸÑŸÖÿßŸÑ ÿπŸÑŸâ ÿßŸÑŸÇŸáŸàÿ©ÿü",
        "ÿ£ÿ±ŸÜŸä ÿ™ŸÉÿßŸÑŸäŸÅ ÿßŸÑŸÜŸÇŸÑ ÿßŸÑÿÆÿßÿµÿ© ÿ®Ÿä",
        "ŸÖÿß ŸáŸä ÿ£ŸÉÿ®ÿ± ŸÅÿ¶ÿßÿ™ ÿßŸÑÿ•ŸÜŸÅÿßŸÇ ŸÑÿØŸäÿü"
      ]
    };
    return questions[langCode] || questions.en;
  };

  const getWelcomeMessage = (langCode: string) => {
    const welcomes = {
      en: "Hello! I'm your AI spending assistant. Ask me about your expenses, receipts, or savings opportunities in any language!",
      hi: "‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡§æ AI ‡§ñ‡§∞‡•ç‡§ö ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§π‡•Ç‡§Ç‡•§ ‡§Æ‡•Å‡§ù‡§∏‡•á ‡§Ö‡§™‡§®‡•á ‡§ñ‡§∞‡•ç‡§ö, ‡§∞‡§∏‡•Ä‡§¶‡•ã‡§Ç ‡§Ø‡§æ ‡§¨‡§ö‡§§ ‡§ï‡•á ‡§Ö‡§µ‡§∏‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ï‡§ø‡§∏‡•Ä ‡§≠‡•Ä ‡§≠‡§æ‡§∑‡§æ ‡§Æ‡•á‡§Ç ‡§™‡•Ç‡§õ‡•á‡§Ç!",
      te: "‡∞π‡∞≤‡±ã! ‡∞®‡±á‡∞®‡±Å ‡∞Æ‡±Ä AI ‡∞µ‡±ç‡∞Ø‡∞Ø ‡∞∏‡∞π‡∞æ‡∞Ø‡∞ï‡±Å‡∞°‡∞ø‡∞®‡∞ø. ‡∞Æ‡±Ä ‡∞ñ‡∞∞‡±ç‡∞ö‡±Å‡∞≤‡±Å, ‡∞∞‡∞∏‡±Ä‡∞¶‡±Å‡∞≤‡±Å ‡∞≤‡±á‡∞¶‡∞æ ‡∞™‡±ä‡∞¶‡±Å‡∞™‡±Å ‡∞Ö‡∞µ‡∞ï‡∞æ‡∞∂‡∞æ‡∞≤ ‡∞ó‡±Å‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø ‡∞è ‡∞≠‡∞æ‡∞∑‡∞≤‡±ã‡∞®‡±à‡∞®‡∞æ ‡∞®‡∞®‡±ç‡∞®‡±Å ‡∞Ö‡∞°‡∞ó‡∞Ç‡∞°‡∞ø!",
      ta: "‡Æµ‡Æ£‡Æï‡Øç‡Æï‡ÆÆ‡Øç! ‡Æ®‡Ææ‡Æ©‡Øç ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç AI ‡Æö‡ØÜ‡Æ≤‡Æµ‡ØÅ ‡Æâ‡Æ§‡Æµ‡Æø‡ÆØ‡Ææ‡Æ≥‡Æ∞‡Øç. ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æö‡ØÜ‡Æ≤‡Æµ‡ØÅ‡Æï‡Æ≥‡Øç, ‡Æ∞‡Æö‡ØÄ‡Æ§‡ØÅ‡Æï‡Æ≥‡Øç ‡ÆÖ‡Æ≤‡Øç‡Æ≤‡Æ§‡ØÅ ‡Æö‡Øá‡ÆÆ‡Æø‡Æ™‡Øç‡Æ™‡ØÅ ‡Æµ‡Ææ‡ÆØ‡Øç‡Æ™‡Øç‡Æ™‡ØÅ‡Æï‡Æ≥‡Øç ‡Æ™‡Æ±‡Øç‡Æ±‡Æø ‡Æé‡Æ®‡Øç‡Æ§ ‡ÆÆ‡Øä‡Æ¥‡Æø‡ÆØ‡Æø‡Æ≤‡ØÅ‡ÆÆ‡Øç ‡Æé‡Æ©‡Øç‡Æ©‡Æø‡Æü‡ÆÆ‡Øç ‡Æï‡Øá‡Æ≥‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç!",
      bn: "‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã! ‡¶Ü‡¶Æ‡¶ø ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ AI ‡¶ñ‡¶∞‡¶ö‡ßá‡¶∞ ‡¶∏‡¶π‡¶æ‡¶Ø‡¶º‡¶ï‡•§ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ñ‡¶∞‡¶ö, ‡¶∞‡¶∏‡¶ø‡¶¶ ‡¶¨‡¶æ ‡¶∏‡¶û‡ßç‡¶ö‡¶Ø‡¶º‡ßá‡¶∞ ‡¶∏‡ßÅ‡¶Ø‡ßã‡¶ó ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï‡ßá ‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã ‡¶≠‡¶æ‡¶∑‡¶æ‡¶Ø‡¶º ‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶ú‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶∏‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®!",
      mr: "‡§®‡§Æ‡§∏‡•ç‡§ï‡§æ‡§∞! ‡§Æ‡•Ä ‡§§‡•Å‡§Æ‡§ö‡§æ AI ‡§ñ‡§∞‡•ç‡§ö ‡§∏‡§π‡§æ‡§Ø‡•ç‡§Ø‡§ï ‡§Ü‡§π‡•á. ‡§§‡•Å‡§Æ‡§ö‡•ç‡§Ø‡§æ ‡§ñ‡§∞‡•ç‡§ö, ‡§™‡§æ‡§µ‡§§‡•ç‡§Ø‡§æ ‡§ï‡§ø‡§Ç‡§µ‡§æ ‡§¨‡§ö‡§§‡•Ä‡§ö‡•ç‡§Ø‡§æ ‡§∏‡§Ç‡§ß‡•Ä‡§Ç‡§¨‡§¶‡•ç‡§¶‡§≤ ‡§ï‡•ã‡§£‡§§‡•ç‡§Ø‡§æ‡§π‡•Ä ‡§≠‡§æ‡§∑‡•á‡§§ ‡§Æ‡§≤‡§æ ‡§µ‡§ø‡§ö‡§æ‡§∞‡§æ!",
      gu: "‡™®‡™Æ‡™∏‡´ç‡™§‡´á! ‡™π‡´Å‡™Ç ‡™§‡™Æ‡™æ‡™∞‡´ã AI ‡™ñ‡™∞‡´ç‡™ö ‡™∏‡™π‡™æ‡™Ø‡™ï ‡™õ‡´Å‡™Ç. ‡™§‡™Æ‡™æ‡™∞‡™æ ‡™ñ‡™∞‡´ç‡™ö, ‡™∞‡™∏‡´Ä‡™¶‡´ã ‡™Ö‡™•‡™µ‡™æ ‡™¨‡™ö‡™§‡™®‡´Ä ‡™§‡™ï‡´ã ‡™µ‡™ø‡™∂‡´á ‡™ï‡´ã‡™à‡™™‡™£ ‡™≠‡™æ‡™∑‡™æ‡™Æ‡™æ‡™Ç ‡™Æ‡™®‡´á ‡™™‡´Ç‡™õ‡´ã!",
      kn: "‡≤®‡≤Æ‡≤∏‡≥ç‡≤ï‡≤æ‡≤∞! ‡≤®‡≤æ‡≤®‡≥Å ‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ AI ‡≤µ‡≥Ü‡≤ö‡≥ç‡≤ö ‡≤∏‡≤π‡≤æ‡≤Ø‡≤ï. ‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤µ‡≥Ü‡≤ö‡≥ç‡≤ö‡≤ó‡≤≥‡≥Å, ‡≤∞‡≤∏‡≥Ä‡≤¶‡≤ø‡≤ó‡≤≥‡≥Å ‡≤Ö‡≤•‡≤µ‡≤æ ‡≤â‡≤≥‡≤ø‡≤§‡≤æ‡≤Ø ‡≤Ö‡≤µ‡≤ï‡≤æ‡≤∂‡≤ó‡≤≥ ‡≤¨‡≤ó‡≥ç‡≤ó‡≥Ü ‡≤Ø‡≤æ‡≤µ‡≥Å‡≤¶‡≥á ‡≤≠‡≤æ‡≤∑‡≥Ü‡≤Ø‡≤≤‡≥ç‡≤≤‡≤ø ‡≤®‡≤®‡≥ç‡≤®‡≤®‡≥ç‡≤®‡≥Å ‡≤ï‡≥á‡≤≥‡≤ø!",
      ml: "‡¥π‡¥≤‡µã! ‡¥û‡¥æ‡µª ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ AI ‡¥ö‡µÜ‡¥≤‡¥µ‡µç ‡¥∏‡¥π‡¥æ‡¥Ø‡¥ï‡¥®‡¥æ‡¥£‡µç. ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥ö‡µÜ‡¥≤‡¥µ‡µÅ‡¥ï‡µæ, ‡¥∞‡¥∏‡µÄ‡¥§‡µÅ‡¥ï‡µæ ‡¥Ö‡¥≤‡µç‡¥≤‡µÜ‡¥ô‡µç‡¥ï‡¥ø‡µΩ ‡¥∏‡¥Æ‡µç‡¥™‡¥æ‡¥¶‡µç‡¥Ø ‡¥Ö‡¥µ‡¥∏‡¥∞‡¥ô‡µç‡¥ô‡µæ ‡¥ï‡µÅ‡¥±‡¥ø‡¥ö‡µç‡¥ö‡µç ‡¥è‡¥§‡µç ‡¥≠‡¥æ‡¥∑‡¥Ø‡¥ø‡¥≤‡µÅ‡¥Ç ‡¥é‡¥®‡µç‡¥®‡µã‡¥ü‡µç ‡¥ö‡µã‡¥¶‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï!",
      pa: "‡®∏‡®§ ‡®∏‡©ç‡®∞‡©Ä ‡®Ö‡®ï‡®æ‡®≤! ‡®Æ‡©à‡®Ç ‡®§‡©Å‡®π‡®æ‡®°‡®æ AI ‡®ñ‡®∞‡®ö‡®æ ‡®∏‡®π‡®æ‡®á‡®ï ‡®π‡®æ‡®Ç‡•§ ‡®§‡©Å‡®π‡®æ‡®°‡©á ‡®ñ‡®∞‡®ö‡©á, ‡®∞‡®∏‡©Ä‡®¶‡®æ‡®Ç ‡®ú‡®æ‡®Ç ‡®¨‡®ö‡®§ ‡®¶‡©á ‡®Æ‡©å‡®ï‡®ø‡®Ü‡®Ç ‡®¨‡®æ‡®∞‡©á ‡®ï‡®ø‡®∏‡©á ‡®µ‡©Ä ‡®≠‡®æ‡®∏‡®º‡®æ ‡®µ‡®ø‡©±‡®ö ‡®Æ‡©à‡®®‡©Ç‡©∞ ‡®™‡©Å‡©±‡®õ‡©ã!",
      ur: "€Å€åŸÑŸà! ŸÖ€å⁄∫ ÿ¢Ÿæ ⁄©ÿß AI ÿÆÿ±⁄Ü ŸÖÿπÿßŸàŸÜ €ÅŸà⁄∫€î ÿßŸæŸÜ€í ÿßÿÆÿ±ÿßÿ¨ÿßÿ™ÿå ÿ±ÿ≥€åÿØŸà⁄∫ €åÿß ÿ®⁄Üÿ™ ⁄©€í ŸÖŸàÿßŸÇÿπ ⁄©€í ÿ®ÿßÿ±€í ŸÖ€å⁄∫ ⁄©ÿ≥€å ÿ®⁄æ€å ÿ≤ÿ®ÿßŸÜ ŸÖ€å⁄∫ ŸÖÿ¨⁄æ ÿ≥€í ŸæŸà⁄Ü⁄æ€å⁄∫!",
      es: "¬°Hola! Soy tu asistente de gastos con IA. ¬°Preg√∫ntame sobre tus gastos, recibos u oportunidades de ahorro en cualquier idioma!",
      fr: "Bonjour! Je suis votre assistant de d√©penses IA. Demandez-moi vos d√©penses, re√ßus ou opportunit√©s d'√©conomies dans n'importe quelle langue!",
      de: "Hallo! Ich bin Ihr KI-Ausgabenassistent. Fragen Sie mich nach Ihren Ausgaben, Belegen oder Sparm√∂glichkeiten in jeder Sprache!",
      zh: "‰Ω†Â•ΩÔºÅÊàëÊòØ‰Ω†ÁöÑAIÊîØÂá∫Âä©Êâã„ÄÇÁî®‰ªª‰ΩïËØ≠Ë®ÄÈóÆÊàëÂÖ≥‰∫é‰Ω†ÁöÑÊîØÂá∫„ÄÅÊî∂ÊçÆÊàñÂÇ®ËìÑÊú∫‰ºöÔºÅ",
      ar: "ŸÖÿ±ÿ≠ÿ®ÿß! ÿ£ŸÜÿß ŸÖÿ≥ÿßÿπÿØ ÿßŸÑÿ•ŸÜŸÅÿßŸÇ ÿßŸÑÿ∞ŸÉŸä ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ. ÿßÿ≥ÿ£ŸÑŸÜŸä ÿπŸÜ ŸÜŸÅŸÇÿßÿ™ŸÉ ÿ£Ÿà ÿ•ŸäÿµÿßŸÑÿßÿ™ŸÉ ÿ£Ÿà ŸÅÿ±ÿµ ÿßŸÑÿ™ŸàŸÅŸäÿ± ÿ®ÿ£Ÿä ŸÑÿ∫ÿ©!"
    };
    return welcomes[langCode] || welcomes.en;
  };

  const simulateAIResponse = async (question: string) => {
    setIsLoading(true);
    
    // Simulate AI processing delay
    await new Promise(resolve => setTimeout(resolve, 1500));

    // Mock responses based on question content and language
    let response = "";
    const lowerQuestion = question.toLowerCase();
    
    if (lowerQuestion.includes('groceries') || lowerQuestion.includes('‡§ï‡§ø‡§∞‡§æ‡§®‡•á') || lowerQuestion.includes('‡∞ï‡∞ø‡∞∞‡∞æ‡∞£‡∞æ') || lowerQuestion.includes('‡ÆÆ‡Æ≥‡Æø‡Æï‡Øà') || lowerQuestion.includes('‡¶Æ‡ßÅ‡¶¶‡¶ø') || lowerQuestion.includes('‡§ï‡§ø‡§∞‡§æ‡§£‡§æ') || lowerQuestion.includes('‡™ï‡™ø‡™∞‡™æ‡™£‡™æ') || lowerQuestion.includes('‡≤¶‡≤ø‡≤®‡≤∏‡≤ø') || lowerQuestion.includes('‡¥™‡¥≤‡¥µ‡µç‡¥Ø‡¥û‡µç‡¥ú‡¥®') || lowerQuestion.includes('‡®ï‡®ø‡®∞‡®ø‡®Ü‡®®‡©á') || lowerQuestion.includes('⁄©ÿ±€åÿßŸÜ€í')) {
      const responses = {
        en: "Based on your receipts, you spent ‚Çπ28,745 on groceries this month. This is 12% higher than last month. I noticed you bought organic items frequently - consider shopping during sale days to save up to 20%.",
        hi: "‡§Ü‡§™‡§ï‡•Ä ‡§∞‡§∏‡•Ä‡§¶‡•ã‡§Ç ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞, ‡§Ü‡§™‡§®‡•á ‡§á‡§∏ ‡§Æ‡§π‡•Ä‡§®‡•á ‡§ï‡§ø‡§∞‡§æ‡§®‡•á ‡§ï‡§æ ‡§∏‡§æ‡§Æ‡§æ‡§® ‡§™‡§∞ ‚Çπ28,745 ‡§ñ‡§∞‡•ç‡§ö ‡§ï‡§ø‡§è‡•§ ‡§Ø‡§π ‡§™‡§ø‡§õ‡§≤‡•á ‡§Æ‡§π‡•Ä‡§®‡•á ‡§∏‡•á 12% ‡§Ö‡§ß‡§ø‡§ï ‡§π‡•à‡•§",
        te: "‡∞Æ‡±Ä ‡∞∞‡∞∏‡±Ä‡∞¶‡±Å‡∞≤ ‡∞Ü‡∞ß‡∞æ‡∞∞‡∞Ç‡∞ó‡∞æ, ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞à ‡∞®‡±Ü‡∞≤‡∞≤‡±ã ‡∞ï‡∞ø‡∞∞‡∞æ‡∞£‡∞æ ‡∞∏‡∞æ‡∞Æ‡∞æ‡∞®‡±Å ‡∞Æ‡±Ä‡∞¶ ‚Çπ28,745 ‡∞ñ‡∞∞‡±ç‡∞ö‡±Å ‡∞ö‡±á‡∞∂‡∞æ‡∞∞‡±Å‡•§ ‡∞á‡∞¶‡∞ø ‡∞ó‡∞§ ‡∞®‡±Ü‡∞≤ ‡∞ï‡∞Ç‡∞ü‡±á 12% ‡∞é‡∞ï‡±ç‡∞ï‡±Å‡∞µ‡•§",
        ta: "‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æ∞‡Æö‡ØÄ‡Æ§‡ØÅ‡Æï‡Æ≥‡Æø‡Æ©‡Øç ‡ÆÖ‡Æü‡Æø‡Æ™‡Øç‡Æ™‡Æü‡Øà‡ÆØ‡Æø‡Æ≤‡Øç, ‡Æá‡Æ®‡Øç‡Æ§ ‡ÆÆ‡Ææ‡Æ§‡ÆÆ‡Øç ‡Æ®‡ØÄ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡ÆÆ‡Æ≥‡Æø‡Æï‡Øà‡Æ™‡Øç ‡Æ™‡Øä‡Æ∞‡ØÅ‡Æü‡Øç‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‚Çπ28,745 ‡Æö‡ØÜ‡Æ≤‡Æµ‡ØÅ ‡Æö‡ØÜ‡ÆØ‡Øç‡Æ§‡ØÅ‡Æ≥‡Øç‡Æ≥‡ØÄ‡Æ∞‡Øç‡Æï‡Æ≥‡Øç. ‡Æá‡Æ§‡ØÅ ‡Æï‡Æü‡Æ®‡Øç‡Æ§ ‡ÆÆ‡Ææ‡Æ§‡Æ§‡Øç‡Æ§‡Øà ‡Æµ‡Æø‡Æü 12% ‡ÆÖ‡Æ§‡Æø‡Æï‡ÆÆ‡Øç‡•§",
        bn: "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∞‡¶∏‡¶ø‡¶¶‡ßá‡¶∞ ‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø‡¶§‡ßá, ‡¶Ü‡¶™‡¶®‡¶ø ‡¶è‡¶á ‡¶Æ‡¶æ‡¶∏‡ßá ‡¶Æ‡ßÅ‡¶¶‡¶ø‡¶ñ‡¶æ‡¶®‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‚Çπ28,745 ‡¶ñ‡¶∞‡¶ö ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡¶®‡•§ ‡¶è‡¶ü‡¶ø ‡¶ó‡¶§ ‡¶Æ‡¶æ‡¶∏‡ßá‡¶∞ ‡¶ö‡ßá‡¶Ø‡¶º‡ßá 12% ‡¶¨‡ßá‡¶∂‡¶ø‡•§",
        mr: "‡§§‡•Å‡§Æ‡§ö‡•ç‡§Ø‡§æ ‡§∞‡§∏‡•Ä‡§¶‡§æ‡§Ç‡§ö‡•ç‡§Ø‡§æ ‡§Ü‡§ß‡§æ‡§∞‡•á, ‡§§‡•Å‡§Æ‡•ç‡§π‡•Ä ‡§Ø‡§æ ‡§Æ‡§π‡§ø‡§®‡•ç‡§Ø‡§æ‡§§ ‡§ï‡§ø‡§∞‡§æ‡§£‡§æ‡§Æ‡§æ‡§≤‡§æ‡§µ‡§∞ ‚Çπ28,745 ‡§ñ‡§∞‡•ç‡§ö ‡§ï‡•á‡§≤‡§æ ‡§Ü‡§π‡•á. ‡§π‡•á ‡§ó‡•á‡§≤‡•ç‡§Ø‡§æ ‡§Æ‡§π‡§ø‡§®‡•ç‡§Ø‡§æ‡§™‡•á‡§ï‡•ç‡§∑‡§æ 12% ‡§ú‡§æ‡§∏‡•ç‡§§ ‡§Ü‡§π‡•á.",
        gu: "‡™§‡™Æ‡™æ‡™∞‡´Ä ‡™∞‡™∏‡´Ä‡™¶‡´ã‡™®‡™æ ‡™Ü‡™ß‡™æ‡™∞‡´á, ‡™§‡™Æ‡´á ‡™Ü ‡™Æ‡™π‡™ø‡™®‡´á ‡™ï‡™ø‡™∞‡™æ‡™£‡™æ‡™®‡™æ ‡™∏‡™æ‡™Æ‡™æ‡™® ‡™™‡™∞ ‚Çπ28,745 ‡™ñ‡™∞‡´ç‡™ö ‡™ï‡™∞‡´ç‡™Ø‡´ã ‡™õ‡´á. ‡™Ü ‡™ó‡™Ø‡™æ ‡™Æ‡™π‡™ø‡™®‡™æ ‡™ï‡™∞‡™§‡™æ‡™Ç 12% ‡™µ‡™ß‡™æ‡™∞‡´á ‡™õ‡´á.",
        kn: "‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤∞‡≤∏‡≥Ä‡≤¶‡≤ø‡≤ó‡≤≥ ‡≤Ü‡≤ß‡≤æ‡≤∞‡≤¶ ‡≤Æ‡≥á‡≤≤‡≥Ü, ‡≤à ‡≤§‡≤ø‡≤Ç‡≤ó‡≤≥‡≥Å ‡≤®‡≥Ä‡≤µ‡≥Å ‡≤¶‡≤ø‡≤®‡≤∏‡≤ø ‡≤∏‡≤æ‡≤Æ‡≤æ‡≤®‡≥Å‡≤ó‡≤≥‡≤ø‡≤ó‡≥Ü ‚Çπ28,745 ‡≤ñ‡≤∞‡≥ç‡≤ö‡≥Å ‡≤Æ‡≤æ‡≤°‡≤ø‡≤¶‡≥ç‡≤¶‡≥Ä‡≤∞‡≤ø. ‡≤á‡≤¶‡≥Å ‡≤ï‡≤≥‡≥Ü‡≤¶ ‡≤§‡≤ø‡≤Ç‡≤ó‡≤≥‡≤ø‡≤ó‡≤ø‡≤Ç‡≤§ 12% ‡≤π‡≥Ü‡≤ö‡≥ç‡≤ö‡≥Å.",
        ml: "‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥∞‡¥∏‡µÄ‡¥§‡µÅ‡¥ï‡¥≥‡µÅ‡¥ü‡µÜ ‡¥Ö‡¥ü‡¥ø‡¥∏‡µç‡¥•‡¥æ‡¥®‡¥§‡µç‡¥§‡¥ø‡µΩ, ‡¥à ‡¥Æ‡¥æ‡¥∏‡¥Ç ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡µæ ‡¥™‡¥≤‡¥µ‡µç‡¥Ø‡¥û‡µç‡¥ú‡¥®‡¥ô‡µç‡¥ô‡µæ‡¥ï‡µç‡¥ï‡¥æ‡¥Ø‡¥ø ‚Çπ28,745 ‡¥ö‡¥ø‡¥≤‡¥µ‡¥æ‡¥ï‡µç‡¥ï‡¥ø. ‡¥á‡¥§‡µç ‡¥ï‡¥¥‡¥ø‡¥û‡µç‡¥û ‡¥Æ‡¥æ‡¥∏‡¥§‡µç‡¥§‡µá‡¥ï‡µç‡¥ï‡¥æ‡µæ 12% ‡¥ï‡µÇ‡¥ü‡µÅ‡¥§‡¥≤‡¥æ‡¥£‡µç.",
        pa: "‡®§‡©Å‡®π‡®æ‡®°‡©Ä‡®Ü‡®Ç ‡®∞‡®∏‡©Ä‡®¶‡®æ‡®Ç ‡®¶‡©á ‡®Ü‡®ß‡®æ‡®∞ ‡®§‡©á, ‡®§‡©Å‡®∏‡©Ä‡®Ç ‡®á‡®∏ ‡®Æ‡®π‡©Ä‡®®‡©á ‡®ï‡®ø‡®∞‡®ø‡®Ü‡®®‡©á ‡®¶‡©á ‡®∏‡®æ‡®Æ‡®æ‡®® '‡®§‡©á ‚Çπ28,745 ‡®ñ‡®∞‡®ö ‡®ï‡©Ä‡®§‡©á ‡®π‡®®‡•§ ‡®á‡®π ‡®™‡®ø‡®õ‡®≤‡©á ‡®Æ‡®π‡©Ä‡®®‡©á ‡®®‡®æ‡®≤‡©ã‡®Ç 12% ‡®µ‡©±‡®ß ‡®π‡©à‡•§",
        ur: "ÿ¢Ÿæ ⁄©€å ÿ±ÿ≥€åÿØŸà⁄∫ ⁄©€å ÿ®ŸÜ€åÿßÿØ Ÿæÿ±ÿå ÿ¢Ÿæ ŸÜ€í ÿßÿ≥ ŸÖ€Å€åŸÜ€í ⁄©ÿ±€åÿßŸÜ€í ⁄©€í ÿ≥ÿßŸÖÿßŸÜ Ÿæÿ± ‚Çπ28,745 ÿÆÿ±⁄Ü ⁄©€å€í €Å€å⁄∫€î €å€Å Ÿæ⁄Ü⁄æŸÑ€í ŸÖ€Å€åŸÜ€í ÿ≥€í 12% ÿ≤€åÿßÿØ€Å €Å€í€î"
      };
      response = responses[selectedLanguage] || responses.en;
    } else if (lowerQuestion.includes('coffee') || lowerQuestion.includes('‡§ï‡•â‡§´‡•Ä') || lowerQuestion.includes('‡™ï‡´ã‡™´‡´Ä') || lowerQuestion.includes('‡¶ï‡¶´‡¶ø') || lowerQuestion.includes('‡¥ï‡µã‡¥´‡¥ø') || lowerQuestion.includes('‡¶ï‡¶æ‡¶π‡¶ø') || lowerQuestion.includes('‡™ï‡´ã‡™´‡´Ä')) {
      const responses = {
        en: "You've spent ‚Çπ4,700 on coffee this month. Try brewing at home to save ‚Çπ3,500/month! I can create a savings goal pass for your wallet.",
        hi: "‡§Ü‡§™‡§®‡•á ‡§á‡§∏ ‡§Æ‡§π‡•Ä‡§®‡•á ‡§ï‡•â‡§´‡•Ä ‡§™‡§∞ ‚Çπ4,700 ‡§ñ‡§∞‡•ç‡§ö ‡§ï‡§ø‡§è ‡§π‡•à‡§Ç‡•§ ‡§ò‡§∞ ‡§™‡§∞ ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡•Ä ‡§ï‡•ã‡§∂‡§ø‡§∂ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‚Çπ3,500/‡§Æ‡§π‡•Ä‡§®‡§æ ‡§¨‡§ö‡§æ‡§è‡§Ç!",
        te: "‡∞Æ‡±Ä‡∞∞‡±Å ‡∞à ‡∞®‡±Ü‡∞≤‡∞≤‡±ã ‡∞ï‡∞æ‡∞´‡±Ä ‡∞Æ‡±Ä‡∞¶ ‚Çπ4,700 ‡∞ñ‡∞∞‡±ç‡∞ö‡±Å ‡∞ö‡±á‡∞∂‡∞æ‡∞∞‡±Å‡•§ ‡∞á‡∞Ç‡∞ü‡±ç‡∞≤‡±ã ‡∞§‡∞Ø‡∞æ‡∞∞‡±Å ‡∞ö‡±á‡∞∏‡∞ø ‡∞®‡±Ü‡∞≤‡∞ï‡±Å ‚Çπ3,500 ‡∞Ü‡∞¶‡∞æ ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø!",
        ta: "‡Æá‡Æ®‡Øç‡Æ§ ‡ÆÆ‡Ææ‡Æ§‡ÆÆ‡Øç ‡Æ®‡ØÄ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æï‡Ææ‡Æ™‡Æø‡Æï‡Øç‡Æï‡ØÅ ‚Çπ4,700 ‡Æö‡ØÜ‡Æ≤‡Æµ‡ØÅ ‡Æö‡ØÜ‡ÆØ‡Øç‡Æ§‡ØÅ‡Æ≥‡Øç‡Æ≥‡ØÄ‡Æ∞‡Øç‡Æï‡Æ≥‡Øç. ‡Æµ‡ØÄ‡Æü‡Øç‡Æü‡Æø‡Æ≤‡Øç ‡Æ§‡ÆØ‡Ææ‡Æ∞‡Æø‡Æ§‡Øç‡Æ§‡ØÅ ‡ÆÆ‡Ææ‡Æ§‡ÆÆ‡Øç ‚Çπ3,500 ‡Æö‡Øá‡ÆÆ‡Æø‡Æï‡Øç‡Æï‡Æ≤‡Ææ‡ÆÆ‡Øç!",
        bn: "‡¶Ü‡¶™‡¶®‡¶ø ‡¶è‡¶á ‡¶Æ‡¶æ‡¶∏‡ßá ‡¶ï‡¶´‡¶ø‡¶§‡ßá ‚Çπ4,700 ‡¶ñ‡¶∞‡¶ö ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡¶®‡•§ ‡¶¨‡¶æ‡¶°‡¶º‡¶ø‡¶§‡ßá ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá ‡¶Æ‡¶æ‡¶∏‡ßá ‚Çπ3,500 ‡¶∏‡¶æ‡¶∂‡ßç‡¶∞‡¶Ø‡¶º ‡¶ï‡¶∞‡ßÅ‡¶®!",
        mr: "‡§§‡•Å‡§Æ‡•ç‡§π‡•Ä ‡§Ø‡§æ ‡§Æ‡§π‡§ø‡§®‡•ç‡§Ø‡§æ‡§§ ‡§ï‡•â‡§´‡•Ä‡§µ‡§∞ ‚Çπ4,700 ‡§ñ‡§∞‡•ç‡§ö ‡§ï‡•á‡§≤‡§æ ‡§Ü‡§π‡•á. ‡§ò‡§∞‡•Ä ‡§¨‡§®‡§µ‡•Ç‡§® ‡§¶‡§∞‡§Æ‡§π‡§æ ‚Çπ3,500 ‡§µ‡§æ‡§ö‡§µ‡§æ!",
        gu: "‡™§‡™Æ‡´á ‡™Ü ‡™Æ‡™π‡™ø‡™®‡´á ‡™ï‡´ã‡™´‡´Ä ‡™™‡™∞ ‚Çπ4,700 ‡™ñ‡™∞‡´ç‡™ö ‡™ï‡™∞‡´ç‡™Ø‡´ã ‡™õ‡´á. ‡™ò‡™∞‡´á ‡™¨‡™®‡™æ‡™µ‡´Ä‡™®‡´á ‡™Æ‡™π‡™ø‡™®‡´á ‚Çπ3,500 ‡™¨‡™ö‡™æ‡™µ‡´ã!",
        kn: "‡≤à ‡≤§‡≤ø‡≤Ç‡≤ó‡≤≥‡≥Å ‡≤®‡≥Ä‡≤µ‡≥Å ‡≤ï‡≤æ‡≤´‡≤ø‡≤ó‡≥Ü ‚Çπ4,700 ‡≤ñ‡≤∞‡≥ç‡≤ö‡≥Å ‡≤Æ‡≤æ‡≤°‡≤ø‡≤¶‡≥ç‡≤¶‡≥Ä‡≤∞‡≤ø. ‡≤Æ‡≤®‡≥Ü‡≤Ø‡≤≤‡≥ç‡≤≤‡≤ø ‡≤§‡≤Ø‡≤æ‡≤∞‡≤ø‡≤∏‡≤ø ‡≤§‡≤ø‡≤Ç‡≤ó‡≤≥‡≤ø‡≤ó‡≥Ü ‚Çπ3,500 ‡≤â‡≤≥‡≤ø‡≤∏‡≤ø!",
        ml: "‡¥à ‡¥Æ‡¥æ‡¥∏‡¥Ç ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡µæ ‡¥ï‡µã‡¥´‡¥ø‡¥ï‡µç‡¥ï‡µç ‚Çπ4,700 ‡¥ö‡¥ø‡¥≤‡¥µ‡¥æ‡¥ï‡µç‡¥ï‡¥ø. ‡¥µ‡µÄ‡¥ü‡µç‡¥ü‡¥ø‡µΩ ‡¥â‡¥£‡µç‡¥ü‡¥æ‡¥ï‡µç‡¥ï‡¥ø ‡¥Æ‡¥æ‡¥∏‡¥§‡µç‡¥§‡¥ø‡µΩ ‚Çπ3,500 ‡¥≤‡¥æ‡¥≠‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡¥Ç!",
        pa: "‡®§‡©Å‡®∏‡©Ä‡®Ç ‡®á‡®∏ ‡®Æ‡®π‡©Ä‡®®‡©á ‡®ï‡®æ‡®´‡©Ä ‡®§‡©á ‚Çπ4,700 ‡®ñ‡®∞‡®ö ‡®ï‡©Ä‡®§‡©á ‡®π‡®®‡•§ ‡®ò‡®∞ ‡®µ‡®ø‡©±‡®ö ‡®¨‡®£‡®æ ‡®ï‡©á ‡®Æ‡®π‡©Ä‡®®‡©á ‚Çπ3,500 ‡®¨‡®ö‡®æ‡®ì!",
        ur: "ÿ¢Ÿæ ŸÜ€í ÿßÿ≥ ŸÖ€Å€åŸÜ€í ⁄©ÿßŸÅ€å Ÿæÿ± ‚Çπ4,700 ÿÆÿ±⁄Ü ⁄©€å€í €Å€å⁄∫€î ⁄Ø⁄æÿ± ŸÖ€å⁄∫ ÿ®ŸÜÿß ⁄©ÿ± ŸÖÿß€ÅÿßŸÜ€Å ‚Çπ3,500 ÿ®⁄Üÿßÿ¶€å⁄∫!"
      };
      response = responses[selectedLanguage] || responses.en;
    } else {
      const responses = {
        en: "I've analyzed your spending data. Based on your recent receipts and patterns, I can help you with budgeting, finding savings opportunities, or creating shopping lists. What specific aspect would you like to explore?",
        hi: "‡§Æ‡•à‡§Ç‡§®‡•á ‡§Ü‡§™‡§ï‡•á ‡§ñ‡§∞‡•ç‡§ö ‡§ï‡•á ‡§°‡•á‡§ü‡§æ ‡§ï‡§æ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡§ø‡§Ø‡§æ ‡§π‡•à‡•§ ‡§Ü‡§™‡§ï‡•Ä ‡§π‡§æ‡§≤ ‡§ï‡•Ä ‡§∞‡§∏‡•Ä‡§¶‡•ã‡§Ç ‡§î‡§∞ ‡§™‡•à‡§ü‡§∞‡•ç‡§® ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞, ‡§Æ‡•à‡§Ç ‡§¨‡§ú‡§ü‡§ø‡§Ç‡§ó ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§Æ‡§¶‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç‡•§",
        te: "‡∞®‡±á‡∞®‡±Å ‡∞Æ‡±Ä ‡∞µ‡±ç‡∞Ø‡∞Ø ‡∞°‡±á‡∞ü‡∞æ‡∞®‡±Å ‡∞µ‡∞ø‡∞∂‡±ç‡∞≤‡±á‡∞∑‡∞ø‡∞Ç‡∞ö‡∞æ‡∞®‡±Å. ‡∞Æ‡±Ä ‡∞á‡∞ü‡±Ä‡∞µ‡∞≤‡∞ø ‡∞∞‡∞∏‡±Ä‡∞¶‡±Å‡∞≤‡±Å ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞®‡∞Æ‡±Ç‡∞®‡∞æ‡∞≤ ‡∞Ü‡∞ß‡∞æ‡∞∞‡∞Ç‡∞ó‡∞æ, ‡∞®‡±á‡∞®‡±Å ‡∞¨‡∞°‡±ç‡∞ú‡±Ü‡∞ü‡∞ø‡∞Ç‡∞ó‡±ç‚Äå‡∞≤‡±ã ‡∞Æ‡±Ä‡∞ï‡±Å ‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç ‡∞ö‡±á‡∞Ø‡∞ó‡∞≤‡∞®‡±Å.",
        ta: "‡Æ®‡Ææ‡Æ©‡Øç ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æö‡ØÜ‡Æ≤‡Æµ‡ØÅ ‡Æ§‡Æ∞‡Æµ‡Øà ‡Æ™‡Æï‡ØÅ‡Æ™‡Øç‡Æ™‡Ææ‡ÆØ‡Øç‡Æµ‡ØÅ ‡Æö‡ØÜ‡ÆØ‡Øç‡Æ§‡ØÅ‡Æ≥‡Øç‡Æ≥‡Øá‡Æ©‡Øç. ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æö‡ÆÆ‡ØÄ‡Æ™‡Æ§‡Øç‡Æ§‡Æø‡ÆØ ‡Æ∞‡Æö‡ØÄ‡Æ§‡ØÅ‡Æï‡Æ≥‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æµ‡Æü‡Æø‡Æµ‡Æô‡Øç‡Æï‡Æ≥‡Æø‡Æ©‡Øç ‡ÆÖ‡Æü‡Æø‡Æ™‡Øç‡Æ™‡Æü‡Øà‡ÆØ‡Æø‡Æ≤‡Øç, ‡Æ™‡Æü‡Øç‡Æú‡ØÜ‡Æü‡Øç‡Æü‡Æø‡Æ≤‡Øç ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡Æâ‡Æ§‡Æµ ‡ÆÆ‡ØÅ‡Æü‡Æø‡ÆØ‡ØÅ‡ÆÆ‡Øç.",
        bn: "‡¶Ü‡¶Æ‡¶ø ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ñ‡¶∞‡¶ö‡ßá‡¶∞ ‡¶°‡ßá‡¶ü‡¶æ ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£ ‡¶ï‡¶∞‡ßá‡¶õ‡¶ø‡•§ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶Æ‡ßç‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ï ‡¶∞‡¶∏‡¶ø‡¶¶ ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∞‡ßç‡¶®‡ßá‡¶∞ ‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø‡¶§‡ßá, ‡¶Ü‡¶Æ‡¶ø ‡¶¨‡¶æ‡¶ú‡ßá‡¶ü‡¶ø‡¶Ç‡¶Ø‡¶º‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø‡•§",
        mr: "‡§Æ‡•Ä ‡§§‡•Å‡§Æ‡§ö‡•ç‡§Ø‡§æ ‡§ñ‡§∞‡•ç‡§ö‡§æ‡§ö‡•ç‡§Ø‡§æ ‡§°‡•á‡§ü‡§æ‡§ö‡•á ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡•á‡§≤‡•á ‡§Ü‡§π‡•á. ‡§§‡•Å‡§Æ‡§ö‡•ç‡§Ø‡§æ ‡§Ö‡§≤‡•Ä‡§ï‡§°‡§ö‡•ç‡§Ø‡§æ ‡§™‡§æ‡§µ‡§§‡•ç‡§Ø‡§æ ‡§Ü‡§£‡§ø ‡§®‡§Æ‡•Å‡§®‡•ç‡§Ø‡§æ‡§Ç‡§ö‡•ç‡§Ø‡§æ ‡§Ü‡§ß‡§æ‡§∞‡•á, ‡§Æ‡•Ä ‡§¨‡§ú‡•á‡§ü‡§ø‡§Ç‡§ó‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§Æ‡§¶‡§§ ‡§ï‡§∞‡•Ç ‡§∂‡§ï‡§§‡•ã.",
        gu: "‡™Æ‡´á‡™Ç ‡™§‡™Æ‡™æ‡™∞‡™æ ‡™ñ‡™∞‡´ç‡™ö‡™®‡™æ ‡™°‡´á‡™ü‡™æ‡™®‡´Å‡™Ç ‡™µ‡™ø‡™∂‡´ç‡™≤‡´á‡™∑‡™£ ‡™ï‡™∞‡´ç‡™Ø‡´Å‡™Ç ‡™õ‡´á. ‡™§‡™Æ‡™æ‡™∞‡´Ä ‡™§‡™æ‡™ú‡´á‡™§‡™∞‡™®‡´Ä ‡™∞‡™∏‡´Ä‡™¶‡´ã ‡™Ö‡™®‡´á ‡™™‡´á‡™ü‡™∞‡´ç‡™®‡™®‡™æ ‡™Ü‡™ß‡™æ‡™∞‡´á, ‡™π‡´Å‡™Ç ‡™¨‡™ú‡´á‡™ü‡™ø‡™Ç‡™ó‡™Æ‡™æ‡™Ç ‡™Æ‡™¶‡™¶ ‡™ï‡™∞‡´Ä ‡™∂‡™ï‡´Å‡™Ç ‡™õ‡´Å‡™Ç.",
        kn: "‡≤®‡≤æ‡≤®‡≥Å ‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤µ‡≥Ü‡≤ö‡≥ç‡≤ö‡≤¶ ‡≤°‡≥á‡≤ü‡≤æ‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤µ‡≤ø‡≤∂‡≥ç‡≤≤‡≥á‡≤∑‡≤ø‡≤∏‡≤ø‡≤¶‡≥ç‡≤¶‡≥á‡≤®‡≥Ü. ‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤á‡≤§‡≥ç‡≤§‡≥Ä‡≤ö‡≤ø‡≤® ‡≤∞‡≤∏‡≥Ä‡≤¶‡≤ø‡≤ó‡≤≥‡≥Å ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤Æ‡≤æ‡≤¶‡≤∞‡≤ø‡≤ó‡≤≥ ‡≤Ü‡≤ß‡≤æ‡≤∞‡≤¶ ‡≤Æ‡≥á‡≤≤‡≥Ü, ‡≤®‡≤æ‡≤®‡≥Å ‡≤¨‡≤ú‡≥Ü‡≤ü‡≤ø‡≤Ç‡≤ó‡≥ç‚Äå‡≤®‡≤≤‡≥ç‡≤≤‡≤ø ‡≤∏‡≤π‡≤æ‡≤Ø ‡≤Æ‡≤æ‡≤°‡≤¨‡≤π‡≥Å‡≤¶‡≥Å.",
        ml: "‡¥û‡¥æ‡µª ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥ö‡µÜ‡¥≤‡¥µ‡µç ‡¥°‡¥æ‡¥±‡µç‡¥± ‡¥µ‡¥ø‡¥∂‡¥ï‡¥≤‡¥®‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥§‡¥ø‡¥ü‡µç‡¥ü‡µÅ‡¥£‡µç‡¥ü‡µç. ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥∏‡¥Æ‡µÄ‡¥™‡¥ï‡¥æ‡¥≤ ‡¥∞‡¥∏‡µÄ‡¥§‡µÅ‡¥ï‡¥≥‡µÅ‡¥ü‡µÜ‡¥Ø‡µÅ‡¥Ç ‡¥™‡¥æ‡¥±‡µç‡¥±‡µá‡¥£‡µÅ‡¥ï‡¥≥‡µÅ‡¥ü‡µÜ‡¥Ø‡µÅ‡¥Ç ‡¥Ö‡¥ü‡¥ø‡¥∏‡µç‡¥•‡¥æ‡¥®‡¥§‡µç‡¥§‡¥ø‡µΩ, ‡¥é‡¥®‡¥ø‡¥ï‡µç‡¥ï‡µç ‡¥¨‡¥°‡µç‡¥ú‡¥±‡µç‡¥±‡¥ø‡¥Ç‡¥ó‡¥ø‡µΩ ‡¥∏‡¥π‡¥æ‡¥Ø‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡¥®‡¥æ‡¥ï‡µÅ‡¥Ç.",
        pa: "‡®Æ‡©à‡®Ç ‡®§‡©Å‡®π‡®æ‡®°‡©á ‡®ñ‡®∞‡®ö‡©á ‡®¶‡©á ‡®°‡®æ‡®ü‡®æ ‡®¶‡®æ ‡®µ‡®ø‡®∏‡®º‡®≤‡©á‡®∏‡®º‡®£ ‡®ï‡©Ä‡®§‡®æ ‡®π‡©à‡•§ ‡®§‡©Å‡®π‡®æ‡®°‡©Ä‡®Ü‡®Ç ‡®π‡®æ‡®≤‡©Ä‡®Ü ‡®∞‡®∏‡©Ä‡®¶‡®æ‡®Ç ‡®Ö‡®§‡©á ‡®®‡®Æ‡©Ç‡®®‡®ø‡®Ü‡®Ç ‡®¶‡©á ‡®Ü‡®ß‡®æ‡®∞ ‡®§‡©á, ‡®Æ‡©à‡®Ç ‡®¨‡®ú‡®ü‡®ø‡©∞‡®ó ‡®µ‡®ø‡©±‡®ö ‡®Æ‡®¶‡®¶ ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡®æ ‡®π‡®æ‡®Ç‡•§",
        ur: "ŸÖ€å⁄∫ ŸÜ€í ÿ¢Ÿæ ⁄©€í ÿÆÿ±⁄Ü ⁄©€í ⁄à€åŸπÿß ⁄©ÿß ÿ™ÿ¨ÿ≤€å€Å ⁄©€åÿß €Å€í€î ÿ¢Ÿæ ⁄©€å ÿ≠ÿßŸÑ€å€Å ÿ±ÿ≥€åÿØŸà⁄∫ ÿßŸàÿ± Ÿæ€åŸπÿ±ŸÜ ⁄©€å ÿ®ŸÜ€åÿßÿØ Ÿæÿ±ÿå ŸÖ€å⁄∫ ÿ®ÿ¨ŸπŸÜ⁄Ø ŸÖ€å⁄∫ ŸÖÿØÿØ ⁄©ÿ± ÿ≥⁄©ÿ™ÿß €ÅŸà⁄∫€î"
      };
      response = responses[selectedLanguage] || responses.en;
    }

    setMessages(prev => [...prev, {
      type: 'bot',
      content: response,
      timestamp: new Date()
    }]);
    
    setIsLoading(false);
  };

  const handleSendMessage = async () => {
    if (!inputValue.trim()) return;

    const userMessage = {
      type: 'user',
      content: inputValue,
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    const question = inputValue;
    setInputValue('');

    await simulateAIResponse(question);
  };

  const handleQuickQuestion = (question: string) => {
    setInputValue(question);
  };

  const handleLanguageChange = (langCode: string) => {
    setSelectedLanguage(langCode);
    // Update welcome message
    setMessages([{
      type: 'bot',
      content: getWelcomeMessage(langCode),
      timestamp: new Date()
    }]);
  };

  return (
    <div className="p-6 max-w-4xl mx-auto">
      <div className="mb-6">
        <h1 className="text-3xl font-bold text-gray-900 mb-2">AI Assistant</h1>
        <p className="text-gray-600">Ask questions about your spending and get insights</p>
      </div>

      {/* Language Selector */}
      <Card className="mb-6">
        <CardHeader>
          <CardTitle className="flex items-center text-lg">
            <Globe className="w-5 h-5 mr-2 text-blue-600" />
            Language / ‡§≠‡§æ‡§∑‡§æ / ‡¶≠‡¶æ‡¶∑‡¶æ / ‡™≠‡™æ‡™∑‡™æ / ‡≤≠‡≤æ‡≤∑‡≥Ü / ‡¥§‡§ï‡§æ‡§µ‡§≥ / ‡®≠‡®æ‡®∏‡®º‡®æ / ÿ≤ÿ®ÿßŸÜ
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="flex flex-wrap gap-2">
            {languages.map((lang) => (
              <Button
                key={lang.code}
                variant={selectedLanguage === lang.code ? "default" : "outline"}
                size="sm"
                onClick={() => handleLanguageChange(lang.code)}
                className={selectedLanguage === lang.code ? "bg-blue-600" : ""}
              >
                <span className="mr-1">{lang.flag}</span>
                {lang.name}
              </Button>
            ))}
          </div>
        </CardContent>
      </Card>

      {/* Chat Interface */}
      <div className="grid lg:grid-cols-3 gap-6">
        <div className="lg:col-span-2">
          <Card className="h-96">
            <CardHeader>
              <CardTitle className="flex items-center">
                <MessageCircle className="w-5 h-5 mr-2 text-green-600" />
                Chat
              </CardTitle>
            </CardHeader>
            <CardContent className="flex flex-col h-80">
              <div className="flex-1 overflow-y-auto space-y-4 mb-4">
                {messages.map((message, index) => (
                  <div
                    key={index}
                    className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}
                  >
                    <div
                      className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${
                        message.type === 'user'
                          ? 'bg-blue-600 text-white'
                          : 'bg-gray-100 text-gray-900'
                      }`}
                    >
                      <p className="text-sm">{message.content}</p>
                    </div>
                  </div>
                ))}
                {isLoading && (
                  <div className="flex justify-start">
                    <div className="bg-gray-100 rounded-lg px-4 py-2">
                      <div className="flex items-center space-x-2">
                        <Zap className="w-4 h-4 text-yellow-500 animate-pulse" />
                        <span className="text-sm text-gray-600">AI is thinking...</span>
                      </div>
                    </div>
                  </div>
                )}
              </div>
              
              <div className="flex space-x-2">
                <Input
                  value={inputValue}
                  onChange={(e) => setInputValue(e.target.value)}
                  placeholder="Ask about your spending..."
                  onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}
                  className="flex-1"
                />
                <Button 
                  onClick={handleSendMessage}
                  disabled={!inputValue.trim() || isLoading}
                  className="bg-blue-600 hover:bg-blue-700"
                >
                  <Send className="w-4 h-4" />
                </Button>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Quick Questions */}
        <div>
          <Card>
            <CardHeader>
              <CardTitle className="text-lg">Try asking...</CardTitle>
            </CardHeader>
            <CardContent className="space-y-2">
              {getQuickQuestionsByLanguage(selectedLanguage).map((question, index) => (
                <Button
                  key={index}
                  variant="outline"
                  size="sm"
                  onClick={() => handleQuickQuestion(question)}
                  className="w-full text-left justify-start h-auto p-3 text-wrap"
                >
                  {question}
                </Button>
              ))}
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
};
